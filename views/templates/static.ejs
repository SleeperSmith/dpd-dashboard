<div id="resource-editor" class="file-list">
  <div class="container">
      <div class="well">
        <div class="clearfix">
          <h3 class="pull-left">Files</h3>
          <div id="file-upload" class="pull-right">
            
            <a href="#sync-info-modal" data-toggle="modal" class="btn btn-primary"><i class="icon-white icon-resize-vertical"></i> Setup Local Sync</a>
            
            
          </div>
        </div>
        <div id="files-empty" class="hide">
          <div class="alert alert-info"><strong>This folder is empty.</strong> Create or upload some files to get started.</div>
          <div class="get-started" style="margin-bottom: 0;">
             <p>
               <strong><i class="icon-upload icon-white"></i> Uploading</strong> - The easiest way to get files in your app is to use the "Quick Upload Files" button.
             </p>
             <p>
               <strong><i class="icon-pencil icon-white"></i> Editing</strong> - Once you have uploaded files, you can click on a filename to edit with deployd's built in text editor.
             </p>
             <p>
                <strong><i class="icon-download-alt icon-white"></i> Working Locally</strong> - Setup the <a href="#sync-info-modal" data-toggle="modal">deployd command line tool</a> to easily sync your local files with deployd.
              </p>
          </div>
        </div>
        <ul class="file-list">
          <!-- ko foreach: files -->
          <li class="file" data-bind="click: $parent.onClickFile">
            <i class="icon-file"></i>
            <span data-bind="text: $data"></span>
            <div class="buttons">
              <a href="#" target="_blank" class="btn" data-bind="attr: {href: '/' + $parent.getPath($data)}, clickBubble: false"><i class="icon-eye-open"></i> View</a>
              <a href="#" class="btn" data-bind="click: $parent.deleteFile, clickBubble: false"><i class="icon-remove"></i> Delete</a>
            </div>
          </li>
          <!-- /ko -->
        </ul>
        <a href="#" class="btn btn-success" data-bind="click: addFile"><i class="icon-plus icon-white"></i> File</a>
        <span class="btn btn-primary fileinput-button">
            <i class="icon-upload icon-white"></i>
            <span>Upload</span>
            <input type="file" multiple="multiple" data-bind="event: {change: onChangeUpload}" />
        </span>
        <span id="currentUploads" data-bind="text: uploadingText"></span>
      </div>
    </div>
  </div>
</div>

<div id="sync-info-modal" class="hide modal" style="margin-top: -280px">
  <div class="modal-header">
    <a class="close" data-dismiss="modal">Ã—</a>
    <h3>Setup Local Sync</h3>
  </div>
  <div class="modal-body">
		<p>To sync your app's files with your local filesystem, first install the <code>dpd</code> command line utility. <em>It requires <a href="http://nodejs.org/#download">Node.js</a>.</em></p>

		<p>Run the following commands from the command line to install the utility and setup your app.</p>

		<pre><code>npm install deployd -g</code></pre>

		<p>In the directory where you want to keep your app files, run the following command.
		It will grant local access to your app and tell <code>dpd</code> to store the files in that directory.</p>

		<pre><code>dpd init http://<%= window.location.host %> '<%= $.cookie('DPDAuthKey') %>'</code></pre>

		<p id="scroll_to_here" >Now you can push and pull the entire contents of the directory with the following commands.</p>

		<pre><code>dpd push</code></pre>

		<p>Running <code>dpd push</code> will upload the contents of your current directory to your app.</p>

		<pre><code>dpd pull</code></pre>

		<p>Running <code>dpd pull</code> will download all of your app's files into the current directory.</p>
  </div>
  <div class="modal-footer">

  </div>
</div>