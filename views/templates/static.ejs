<div id="resource-editor" class="file-list">
  <div class="container">
      <div class="well">
        <div class="clearfix">
          <h3 class="pull-left">Files</h3>
          <div class="pull-right">
            
            <a href="#dpd-js-modal" data-toggle="modal" class="btn btn-primary"><i class="icon-white icon-file"></i> Use dpd.js</a>
            <a href="#sync-info-modal" data-toggle="modal" class="btn btn-primary"><i class="icon-white icon-resize-vertical"></i> Setup Local Sync</a>
            
          </div>
        </div>
        <div id="files-empty" data-bind="visible: !(files().length || folders().length)">
          <div class="alert alert-info"><strong>There are no files in your app.</strong> Create or upload some files to get started.</div>
          <div class="get-started" style="margin-bottom: 0;">
             <p>
               <strong><i class="icon-upload icon-white"></i> Uploading</strong> - If you've already built part of your app, you can quickly get your files online by uploading them.
             </p>
             <p>
               <strong><i class="icon-pencil icon-white"></i> Editing</strong> - You can create your entire app in the dashboard if you want. Create a file and use deployd's built-in text editor to write HTML, JavaScript, and CSS.
             </p>
             <p>
                <strong><i class="icon-download-alt icon-white"></i> Working Locally</strong> - Setup the <a href="#sync-info-modal" data-toggle="modal">deployd command line tool</a> to easily sync files to deployd from your favorite text-editor.
              </p>
          </div>
        </div>
        <div id="files" data-bind="template: 'folder-template'" class="file-list-container">
        </div>
        <a href="#" class="btn btn-success" data-bind="click: addFile"><i class="icon-plus icon-white"></i> File</a>
        <a href="#" class="btn btn-success" data-bind="click: addFolder"><i class="icon-plus icon-white"></i> Folder</a>
        <span class="fileinput-button btn btn-primary">
          <i class="icon-upload icon-white" title="Upload"></i>
          Upload
          <input type="file" multiple="multiple" data-bind="event: {change: onChangeUpload}" />
        </spab>
        <span id="currentUploads" data-bind="text: uploadingText"></span>
      </div>
    </div>
  </div>
</div>

<div id="dpd-js-modal" class="hide modal">
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&times;</a>
    <h3>Using Dpd.js</h3>
  </div>
  <div class="modal-body">
    <p>Deployd generates a JavaScript client library for your app using the resources you add.</p>
    <p><a href="/dpd.js" target="_blank">dpd.js</a> is automatically hosted by your server. To use it in your app, add it to your HTML pages:</p>
    <pre class="prettyprint lang-html">&lt;script src="http://code.jquery.com/jquery-latest.min.js"&gt;&lt;/script&gt;
&lt;script src="dpd.js"&gt;&lt;/script&gt;</pre>
    <p><strong>If you would like to use dpd.js in your local testing</strong>, use the dpd.js loader proxy. Put it at the root of your app and include it just like the full library. When you load the script, it will download the latest version of dpd.js from your server. When you upload your app, Deployd will replace the loader proxy with the full library.</p>
    <a href="/dpd.js?proxy=true" class="btn btn-primary"><i class="icon-white icon-download"></i> Download dpd.js proxy</a>
  </div>
</div>

<div id="sync-info-modal" class="hide modal" style="margin-top: -280px">
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&times;</a>
    <h3>Setup Local Sync</h3>
  </div>
  <div class="modal-body">
		<p>To sync your app's files with your local filesystem, first install the <code>dpd</code> command line utility. <em>It requires <a href="http://nodejs.org/#download">Node.js</a>.</em></p>

		<p>Run the following commands from the command line to install the utility and setup your app.</p>

		<pre><code>npm install dpdc -g</code></pre>

		<p>To copy all your apps files run the following command. It will create a folder for you and configure it to point to your remote deployd server.</p>

		<pre><code>dpdc clone <%= window.location.host %></code></pre>

		<p id="scroll_to_here" >Now you can push and pull the entire contents of the directory with the following commands.</p>

		<pre><code>dpdc push</code></pre>

		<p>Running <code>dpdc push</code> will upload all the files of your current directory to your deployd server.</p>

		<pre><code>dpdc pull</code></pre>

		<p>Running <code>dpdc pull</code> will download all of your app's files into the current directory.</p>
		

		<p>You can see your changes without uploading by running a dev server.</p>
				
		<pre><code>dpdc dev</code></pre>
  </div>
  <div class="modal-footer">

  </div>
</div>

<script type="text/html" id="folder-template">
  <div class="add-buttons">
    <a href="#" data-bind="click: addFile"><i class="icon-plus icon-white "></i> File</a>
    &nbsp;
    <a href="#" data-bind="click: addFolder"><i class="icon-plus icon-white "></i> Folder</a>
    &nbsp;
    <a class="fileinput-button">
      <i class="icon-white icon-upload" title="Upload"></i>
      Upload
      <input type="file" multiple="multiple" data-bind="event: {change: onChangeUpload}" />
    </a>
    <span id="currentUploads" data-bind="text: uploadingText"></span>
  </div>
  <ul class="file-list">
    <!-- ko foreach: folders -->
      <li class="folder" data-bind="click: $parent.onClickFolder">
        <i class="icon-white icon-folder-close" data-bind="css: {'icon-folder-close': !isOpen(), 'icon-folder-open': isOpen}"></i>
        <span data-bind="text: name"></span>
        <div class="buttons">
          <a href="#" class="btn" data-bind="click: $parent.deleteFolder"><i class="icon-remove"></i> Delete</a>
        </div>
      </li>
      <li class="file-list-container" data-bind="template: {name: 'folder-template', data: viewModel}, visible: isOpen">
      </li>
    <!-- /ko -->
    <!-- ko foreach: files -->
    <li class="file" data-bind="click: $parent.onClickFile">
      <i class="icon-white icon-file"></i>
      <span data-bind="text: $data"></span>
      <div class="buttons">
        <a href="#" target="_blank" class="btn" data-bind="attr: {href: '/' + $parent.getPath($data)}, clickBubble: false"><i class="icon-eye-open"></i> View</a>
        <a href="#" class="btn" data-bind="click: $parent.deleteFile"><i class="icon-remove"></i> Delete</a>
      </div>
    </li>
    <!-- /ko -->
  </ul>
</script>